# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VdpxShcUwweTBCBqFQ_moIELrr_FY88w
"""

import pandas as pd
import numpy as np
from sklearn import metrics
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier

df1=pd.read_csv('credit_risk_dataset.csv')
df1=df1.dropna()

df1.head()

X=df1[['person_age',	'person_income',	'person_home_ownership',	'person_emp_length',	'loan_intent',	'loan_grade',	'loan_amnt',	'loan_int_rate','loan_percent_income',	'cb_person_default_on_file',	'cb_person_cred_hist_length']]  # Features
y=df1['loan_status']  # Labels

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3) # 70% training and 30% test

col1=df1.person_home_ownership.unique()
col1

col2=df1.loan_grade.unique()
col2

col3=df1.loan_intent.unique()
col3

from sklearn.preprocessing import OrdinalEncoder

features=['person_home_ownership','loan_intent','loan_grade','cb_person_default_on_file']
encoder = OrdinalEncoder(
        handle_unknown='use_encoded_value', 
        unknown_value=-1
    ).fit(X_train[features])
X_train[features] = encoder.transform(X_train[features])
X_test[features] = encoder.transform(X_test[features])

X_train.head()



clf=RandomForestClassifier(n_estimators=100)

#Train the model using the training sets y_pred=clf.predict(X_test)
clf.fit(X_train,y_train)

y_pred=clf.predict(X_test)

print("Accuracy:",metrics.accuracy_score(y_test, y_pred))